# -*- eval: (add-hook 'after-save-hook #'tangle-init-files nil t); -*-
#+title: Emacs Configuration
#+author: Chris Barrett
#+property: header-args:emacs-lisp :tangle "config.el"

* Early Init
:PROPERTIES:
:header-args:emacs-lisp: :tangle "early-init.el"
:END:

#+begin_src emacs-lisp
  ;;; early-init.el -- Run at the beginning of Emacs startup sequence.

  ;;; Commentary:

  ;; This file was generated by org-babel from config.org and should not be edited
  ;; directly.

  ;;; Code:
#+end_src

Disable =package.el=, since it increases startup time and I use
[[https://github.com/nix-community/emacs-overlay][nix-community/emacs-overlay]] to handle package installation.

#+begin_src emacs-lisp
  (setq package-enable-at-startup nil)
#+end_src

** Garbage collection settings

Garbage collection runs slow down the Emacs startup sequence. Temporarily
increase settings. We will set final values at the end of the startup sequence.

#+begin_src emacs-lisp
  (setq gc-cons-threshold most-positive-fixnum)
  (setq gc-cons-percentage 0.7)
#+end_src

* File header

#+begin_src emacs-lisp
  ;;; config.el -- User init file for Emacs.

  ;;; Commentary:

  ;; This file was generated by org-babel from config.org and should not be edited
  ;; directly.

  ;;; Code:
#+end_src

* Tune garbage collection

See: [[https://bling.github.io/blog/2016/01/18/why-are-you-changing-gc-cons-threshold/][Why are you changing gc-cons-threshold?]]

#+begin_src emacs-lisp
  (defvar config-default-gc-threshold 800000)

  (defun config--inhibit-gc ()
    (setq gc-cons-threshold most-positive-fixnum))

  (defun config--enable-gc ()
    (setq gc-cons-threshold config-default-gc-threshold))
#+end_src

Restore GC settings after init sequence has completed.

#+begin_src emacs-lisp
  (add-hook 'after-init-hook #'config--enable-gc)
#+end_src

Prevent GCs during user input in the minibuffer.

#+begin_src emacs-lisp
  (add-hook 'minibuffer-setup-hook #'config--inhibit-gc)
  (add-hook 'minibuffer-exit-hook #'config--enable-gc)
#+end_src

* File postamble

#+begin_src emacs-lisp
  ;; (provide 'config)
  ;;; config.el ends here
#+end_src
